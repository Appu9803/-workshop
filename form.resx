<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>